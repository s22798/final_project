@page "/Dashboard"
@using Syncfusion.Blazor.DropDowns;
@using Syncfusion.Blazor.Buttons;
@using System.ComponentModel.DataAnnotations;
@using final_project.Shared.Models.DTOs
@inject NavigationManager navManager
@inject final_project.Client.Services.Company.ICompanyService CompanyService
@attribute [Authorize]


<div class="col-lg-12 control-section">
    <div class="control-wrapper">
        @if (string.IsNullOrEmpty(Message))
        {
            <EditForm Model="@Company" OnValidSubmit="@OnValidSubmit" OnInvalidSubmit="@OnInvalidSubmit">
                <DataAnnotationsValidator />
                <div>
                    <label class="example-label">Company symbol</label>
                    <SfAutoComplete Placeholder="Type something" @bind-Value="@Company.Ticker" AllowFiltering="true" DataSource="@Companies" AllowCustom="false">
                        <AutoCompleteEvents TItem="CompanySearchDTO" TValue="string" Filtering="@Filteringhandler" ></AutoCompleteEvents>
                        <AutoCompleteTemplates TItem="CompanySearchDTO">   
                            <ItemTemplate Context="context2">
                                <span>
                                    <span class="Ticker"> @((context2 as CompanySearchDTO).Ticker)</span>
                                    <span class="Name"> @((context2 as CompanySearchDTO).Name)</span>
                                    <span class="PrimaryExchange"> @((context2 as CompanySearchDTO).Currency_name)</span>
                                </span>
                            </ItemTemplate>
                            </AutoCompleteTemplates>
                            <AutoCompleteFieldSettings Value="Ticker"/>
                            </SfAutoComplete>
                            <ValidationMessage For="()=>Company.Ticker"/>   
                            </div>
                            <div class="submit-btn">
                                <SfButton type="submit" IsPrimary="true">Search</SfButton>
                                <SfButton IsPrimary="true" @onclick="@(() => GoToWatchlist())">Watchlist</SfButton>
                            </div>
                            </EditForm>
                            }
                        else
                        {
                        <div class="alert alert-success">
                            @Message
                        </div>
                        }
            </div>
            </div>
        
        <style>
            
    .Name{
        margin-left: 25px;
    }
    .PrimaryExchange{
        right: 15px;
        position: absolute;
    }
    .control-wrapper {
        max-width: 500px;
        margin: 0 auto;
        padding: 50px 0px 0px;
    }
    .example-label {
        font-size: 14px;
        margin-bottom: 6px;
    }
    .submit-btn {
        display: flex;
        justify-content: center;
        padding: 20px 0px 0px;
    }
    .validation-message {
        color: red;
        padding: 5px 0px 0px;
    }
</style>
@code {
    private string Message = string.Empty;
    List<CompanySearchDTO> Companies = null;
    private string providedString;


    async void OnValidSubmit()
    {
        Message = $"Form Submitted Successfully! {Company.Ticker}";
        await Task.Delay(1000);
        Message = string.Empty;
        await CompanyService.AddCompanyToDb(Company.Ticker);
        navManager.NavigateTo($"/Dashboard/{Company.Ticker}");
        Company.Ticker = null;
        StateHasChanged();
    }
    private void OnInvalidSubmit()
    {
        Message = string.Empty;
    }

    private async Task Filteringhandler(FilteringEventArgs args)
    {
        if (args.Text.Length > 2){
            var data = await CompanyService.GetSearchedCompany(args.Text);
            Companies = data.ToList();
        }
        Console.WriteLine(args.Text);
    }
    private void GoToWatchlist()
    {
        navManager.NavigateTo("/dashboard/watchlist");
    }
    private CompanySearchDTO Company = new CompanySearchDTO();
    
    
}